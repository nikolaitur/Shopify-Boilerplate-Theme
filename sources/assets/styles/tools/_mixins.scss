/*================ Media Query Mixin ================*/
@mixin media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }

  @if $breakpoint-found == false {
    @warn 'Breakpoint "#{$media-query}" does not exist';
  }
}

// Smooth appearing:
@mixin smoothShow($xShift: 0, $yShift: 0, $delay: 0, $items: 0, $bodyIn: false) {
  .animations-on & {
    opacity: 0;
    transform: translate($xShift, $yShift);
    transition: all 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);
    @if $items == 0 and $delay != 0 {
      transition-delay: #{$delay}s;
    } 
  }

  @if $bodyIn == false {
    .animations-on .section-in & {
      opacity: 1;
      transform: translateX(0) translateY(0);
    }
  } 
  @else {
    .animations-on .body-in & {
      opacity: 1;
      transform: translateX(0) translateY(0);
    }
  }
  @if $items > 0  {
    @for $i from 1 through $items {
      .animations-on &:nth-child(#{$i}) {
        transition-delay: #{$i * $delay}s;
      }
    }
  }
}

@mixin smoothZoom($initZoom: 0, $time: 1, $delay: 0, $bodyIn: false) {
  opacity: 0;
  transform: scale($initZoom);
  transition: all #{$time}s cubic-bezier(0.165, 0.84, 0.44, 1);
  @if $bodyIn == false {
    .section-in & {
      opacity: 1;
      transform: scale(1);
    }
  } 
  @else {
    .body-in & {
      opacity: 1;
      transform: scale(1);
    }
  }
  @if $delay != 0 {
    transition-delay: #{$delay}s;
  } 
}


@mixin placeholder {
  $placeholders: ":-moz" ":-webkit-input" "-moz" "-ms-input";

  @each $placeholder in $placeholders {
    &:#{$placeholder}-placeholder {
      @content;
    }
  }
}

@mixin clearfix() {
  &::after {
    display: block;
    content: "";
    clear: both;
  }
}

@mixin mobile {
  @include media-query('mobile') {
    @content;
  }
}

@mixin desktop {
  @include media-query('desktop') {
    @content;
  }
}

@mixin row($margin) {
  display: flex;
  flex-wrap: wrap;
  margin: 0 -#{$margin};
}

@mixin cell($divider, $padding: 0 $gutter) {
  min-width: percentage(1 / $divider);
  max-width: percentage(1 / $divider);
  padding: $padding;
}

@mixin overlay {
  content: "";
  display: block;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 0;
  pointer-events: none;
  @content;
}